{"version":3,"sources":["types/baseTypes.ts","api/apiHelpers.ts","api/api.ts","services/characterServices.ts","store/slices/charactersSlice.ts","assets/icons/arrow.svg","store/slices/detailSlice.ts","store/slices/errorsSlice.ts","store/slices/index.ts","store/store.ts","components/common/Inputs/Input.tsx","components/SearchInput/SearchInput.tsx","components/common/Buttons/Button.tsx","components/Pagination/Pagination.tsx","hooks/useCharacters.ts","components/Characters/Item/CharacterItem.tsx","components/Characters/NoResults/NoResults.tsx","components/Characters/List/CharactersList.tsx","components/Characters/Placeholder/ListPlaceholder.tsx","components/Characters/Characters.tsx","components/AppRouter/Routes.ts","hooks/useCharacterDetails.ts","types/characterTypes.ts","components/DetailView/Episodes/DetailEpisodes.tsx","components/DetailView/Panel/DetailPanel.tsx","components/DetailView/DetailView.tsx","components/Errors/ErrorPage.tsx","hooks/useErrorBoundary.ts","components/AppRouter/AppRouter.tsx","index.tsx"],"names":["RequestStatus","ERROR_CODE","SERVER","REQUEST","handleResponse","response","json","then","ok","errors","Promise","reject","errorsJson","statusText","statusCode","status","map","error","message","createError","resolve","baseHeaders","query","variables","requestOptions","method","headers","body","JSON","stringify","fetch","apiHelpers","get","id","a","api","data","character","getPage","page","filter","characters","results","info","_defs","_g","fetchCharacters","createAsyncThunk","thunkAPI","characterServices","rejectWithValue","charactersSlice","createSlice","name","initialState","idle","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectCharacters","fetchDetail","detailSlice","selectDetail","detail","errosSlice","isDataError","messages","addMatcher","type","endsWith","test","selectErrors","rootReducer","CharactersSlice","DetailSlice","store","configureStore","reducer","Input","className","inputProps","SearchInput","onSubmit","props","useState","inputValue","setValue","handleSubmit","e","preventDefault","value","onChange","target","onBlur","Button","children","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgArrow","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","width","height","viewBox","ref","x","y","filterUnits","dy","input","stdDeviation","result","floodColor","floodOpacity","operator","in2","in","d","transform","ForwardRef","Pagination","totalPages","currentPage","changePage","useEffect","onClick","parsedValue","parseInt","useCharacters","dispatch","useDispatch","useSelector","CharacterItem","image","species","to","src","alt","loading","NoResults","CharactersList","ListPlaceholder","items","Array","from","_","Characters","setCurrentPage","searchQuery","setQuery","useMemo","isLoading","includes","Helmet","placeholder","pages","useCharacterDetails","ChararterLabels","episode","DetailEpisodes","episodes","DetailPanel","label","DetailView","push","useHistory","useParams","Routes","gender","location","ErrorPage","gotoHome","href","useErrorBoundary","Root","path","ReactDOM","render","StrictMode","AppRouter","document","getElementById"],"mappings":"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","file":"static/js/main.6324e6ba.chunk.js","sourcesContent":["export type ResponseType<T> = {\r\n  info: null | {\r\n    count?: number;\r\n    next?: number;\r\n    pages?: number;\r\n    prev?: number;\r\n  };\r\n  results: Array<T>;\r\n};\r\n\r\nexport type ResponseError = {\r\n  errors: Array<{\r\n    message: string;\r\n  }>;\r\n};\r\n\r\nexport type AppError = {\r\n  statusCode: number;\r\n  statusText: string;\r\n  errors: Array<string>;\r\n};\r\n\r\nexport enum RequestStatus {\r\n  idle = 'idle',\r\n  pending = 'pending',\r\n  fulfilled = 'fulfilled',\r\n  rejected = 'rejected',\r\n}\r\n\r\nexport type SliceType<T> = {\r\n  data: T | null, status: RequestStatus, error: null | any\r\n};\r\n\r\nexport type PageSliceType<T> = SliceType<T> & Pick<ResponseType<T>, 'info'>;\r\n\r\nexport type QueryVariables = {\r\n  page: number,\r\n  filter: Filters\r\n};\r\n\r\nexport type Filters = {\r\n  name: string\r\n};\r\n","import { AppError, ResponseError } from 'types/baseTypes';\r\n\r\nconst createError = (response: Response, errorsJson: ResponseError) : AppError => {\r\n  const { statusText, status } = response;\r\n  const errors = errorsJson.errors.map((error) => error.message);\r\n\r\n  return { statusCode: status, statusText, errors };\r\n};\r\n\r\nconst handleResponse = (response: Response) => response.json().then((json) => {\r\n  if (!response.ok || json.errors) {\r\n    return Promise.reject(createError(response, json));\r\n  }\r\n  return Promise.resolve(json);\r\n});\r\n\r\nconst ERROR_CODE = {\r\n  SERVER: /^5[0-9]{2}$/,\r\n  REQUEST: /^5[0-9]{2}$/,\r\n};\r\n\r\nexport default {\r\n  ERROR_CODE,\r\n  handleResponse,\r\n};\r\n","import apiHelpers from './apiHelpers';\r\n\r\nexport const baseUrl = 'https://rickandmortyapi.com/graphql';\r\n\r\nconst baseHeaders = { 'Content-Type': 'application/json' };\r\n\r\nconst post = (query: string, variables?: any) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: baseHeaders,\r\n    body: JSON.stringify({ query, variables }),\r\n  };\r\n  return fetch(baseUrl, requestOptions).then(apiHelpers.handleResponse);\r\n};\r\n\r\nexport default {\r\n  post,\r\n};\r\n","import api from 'api/api';\r\nimport { QueryVariables, ResponseType } from 'types/baseTypes';\r\nimport { Chararter, ChararterListItem } from 'types/characterTypes';\r\n\r\nconst GET_CHARACTER_QUERY = `\r\nquery getCharacter($id: ID!) {\r\n    character(id: $id) {\r\n      id\r\n      image\r\n      name\r\n      species\r\n      gender\r\n      status\r\n      location {\r\n        name\r\n      }\r\n      episode {\r\n        episode\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst get = async (id: string) : Promise<Chararter> => {\r\n  const response = await api.post(GET_CHARACTER_QUERY, { id });\r\n  return response.data.character;\r\n};\r\n\r\nconst GET_CHARACTERS_PAGE_QUERY = `\r\nquery getCharacters($page: Int, $filter: FilterCharacter) {\r\n    characters(page: $page, filter: $filter) {\r\n      info {\r\n        count\r\n        next\r\n        pages\r\n        prev\r\n      }\r\n      results {\r\n        id\r\n        image\r\n        name\r\n        species\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst getPage = async ({ page, filter }: QueryVariables) : Promise<ResponseType<ChararterListItem>> => {\r\n  const response = await api.post(GET_CHARACTERS_PAGE_QUERY, { page, filter });\r\n  const { results, info } = response.data.characters;\r\n  return { results, info };\r\n};\r\n\r\nexport default {\r\n  get,\r\n  getPage,\r\n};\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport characterServices from 'services/characterServices';\r\nimport { RootState } from 'store/store';\r\nimport {\r\n  QueryVariables, RequestStatus, ResponseType, PageSliceType,\r\n} from 'types/baseTypes';\r\nimport { ChararterListItem } from 'types/characterTypes';\r\n\r\nexport const fetchCharacters = createAsyncThunk<ResponseType<ChararterListItem>, QueryVariables>(\r\n  'characters/fetchCharacters',\r\n  async ({ page, filter }, thunkAPI) => {\r\n    try {\r\n      const data = await characterServices.getPage({ page, filter });\r\n      return data;\r\n    } catch (err) {\r\n      return thunkAPI.rejectWithValue(err);\r\n    }\r\n  },\r\n);\r\n\r\nexport const charactersSlice = createSlice({\r\n  name: 'characters',\r\n  initialState: {\r\n    data: [], status: RequestStatus.idle, info: null, error: null,\r\n  } as PageSliceType<Array<ChararterListItem>>,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCharacters.pending, (state) => {\r\n      state.status = RequestStatus.pending;\r\n    });\r\n\r\n    builder.addCase(fetchCharacters.fulfilled, (state, action) => {\r\n      state.status = RequestStatus.fulfilled;\r\n      state.data = action.payload.results;\r\n      state.info = action.payload.info;\r\n    });\r\n\r\n    builder.addCase(fetchCharacters.rejected, (state, action) => {\r\n      state.status = RequestStatus.rejected;\r\n      state.error = action.payload;\r\n      state.data = [];\r\n      state.info = null;\r\n    });\r\n  },\r\n});\r\n\r\nexport const selectCharacters = (state: RootState) => state.characters;\r\n\r\nexport default charactersSlice.reducer;\r\n","var _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"2 0 16 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"Path_2419\",\n    x: 0,\n    y: 0,\n    width: 19.763,\n    height: 28,\n    filterUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 2,\n    input: \"SourceAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 2,\n    result: \"blur\"\n  }), /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodColor: \"#00003d\",\n    floodOpacity: 0.478\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    operator: \"in\",\n    in2: \"blur\"\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in: \"SourceGraphic\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_2419-2\",\n    \"data-name\": \"Path 2419\",\n    d: \"M454.974,1339.208a1.06,1.06,0,0,1-.822-.391l-5.647-6.939a1.061,1.061,0,0,1,0-1.337l5.647-6.944a1.059,1.059,0,0,1,1.642,1.337l-5.1,6.276,5.1,6.271a1.058,1.058,0,0,1-.82,1.727Z\",\n    transform: \"translate(-442.27 -1319.21)\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/arrow.d2bab04c.svg\";\nexport { ForwardRef as ReactComponent };","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport characterServices from 'services/characterServices';\r\nimport { RootState } from 'store/store';\r\nimport { RequestStatus, SliceType } from 'types/baseTypes';\r\nimport { Chararter } from 'types/characterTypes';\r\n\r\nexport const fetchDetail = createAsyncThunk<Chararter, string>('detail/fetchDetail', async (id, thunkAPI) => {\r\n  try {\r\n    const character = await characterServices.get(id);\r\n    return character;\r\n  } catch (err) {\r\n    return thunkAPI.rejectWithValue(err);\r\n  }\r\n});\r\n\r\nexport const detailSlice = createSlice({\r\n  name: 'detail',\r\n  initialState: {\r\n    data: null,\r\n    status: RequestStatus.idle,\r\n    error: null,\r\n  } as SliceType<Chararter>,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchDetail.pending, (state) => {\r\n      state.status = RequestStatus.pending;\r\n      state.data = null;\r\n      state.error = null;\r\n    });\r\n\r\n    builder.addCase(fetchDetail.fulfilled, (state, action) => {\r\n      state.status = RequestStatus.fulfilled;\r\n      state.data = action.payload;\r\n    });\r\n\r\n    builder.addCase(fetchDetail.rejected, (state, action) => {\r\n      state.status = RequestStatus.rejected;\r\n      state.error = action.payload;\r\n      state.data = null;\r\n    });\r\n  },\r\n});\r\n\r\nexport const selectDetail = (state: RootState) => state.detail;\r\n\r\nexport default detailSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport apiHelpers from 'api/apiHelpers';\r\nimport { RootState } from 'store/store';\r\n\r\nexport const errosSlice = createSlice({\r\n  name: 'characters',\r\n  initialState: {\r\n    isDataError: false,\r\n    messages: [],\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addMatcher(\r\n      (action) => action.type.endsWith('/rejected'),\r\n      (state, action) => {\r\n        state.isDataError = apiHelpers.ERROR_CODE.REQUEST.test(action.statusCode);\r\n        state.messages = action.payload.errors;\r\n      },\r\n    ).addMatcher(\r\n      (action) => action.type.endsWith('/pending') || action.type.endsWith('/fulfilled'),\r\n      (state) => {\r\n        state.isDataError = false;\r\n        state.messages = [];\r\n      },\r\n    );\r\n  },\r\n});\r\n\r\nexport const selectErrors = (state:RootState) => state.errors;\r\n\r\nexport default errosSlice.reducer;\r\n","import CharactersSlice from './charactersSlice';\r\nimport DetailSlice from './detailSlice';\r\nimport ErrorsSlice from './errorsSlice';\r\n\r\nconst rootReducer = {\r\n  characters: CharactersSlice,\r\n  detail: DetailSlice,\r\n  errors: ErrorsSlice,\r\n};\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './slices';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","import { InputHTMLAttributes } from 'react';\r\nimport './Input.scss';\r\n\r\ntype Props = InputHTMLAttributes<HTMLInputElement>;\r\n\r\nconst Input = ({\r\n  className = '', name, type = 'text', ...inputProps\r\n}: Props) => (\r\n  <input className={`input ${className}`} type={type} name={name} id={name} {...inputProps} />\r\n);\r\n\r\nexport default Input;\r\n","import Input from 'components/common/Inputs/Input';\r\nimport {\r\n  ChangeEvent, InputHTMLAttributes, SyntheticEvent, useState,\r\n} from 'react';\r\n\r\ntype Props = {\r\n  onSubmit: (query: string)=>void\r\n} & Omit<InputHTMLAttributes<HTMLInputElement>, 'onSubmit'>;\r\n\r\nconst SearchInput = ({ className = '', onSubmit, ...props }: Props) => {\r\n  const [inputValue, setValue] = useState('');\r\n\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setValue(value);\r\n  };\r\n\r\n  const handleSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (onSubmit) {\r\n      onSubmit(inputValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={className} onSubmit={handleSubmit}>\r\n      <Input {...props} type=\"search\" value={inputValue} onChange={handleInputChange} onBlur={handleSubmit} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { ButtonHTMLAttributes } from 'react';\r\n\r\nimport './Button.scss';\r\n\r\ntype Props = ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nconst Button = ({\r\n  children, className, type = 'button', ...props\r\n}: Props) => (\r\n\r\n  // eslint-disable-next-line react/button-has-type\r\n  <button type={type} {...props} className={`button ${className}`}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import Button from 'components/common/Buttons/Button';\r\nimport Input from 'components/common/Inputs/Input';\r\nimport {\r\n  ChangeEvent, KeyboardEvent, useEffect, useState,\r\n} from 'react';\r\n\r\nimport { ReactComponent as Arrow } from 'assets/icons/arrow.svg';\r\n\r\nimport './Pagination.scss';\r\n\r\ntype Props = {\r\n  totalPages?: number;\r\n  currentPage: number;\r\n  changePage: (page: number) => void;\r\n};\r\n\r\nconst Pagination = ({ totalPages, currentPage, changePage }: Props) => {\r\n  const [inputValue, setValue] = useState(currentPage);\r\n\r\n  useEffect(() => {\r\n    setValue(currentPage);\r\n  }, [currentPage]);\r\n\r\n  if (!totalPages) return null;\r\n\r\n  const goBack = () => {\r\n    if (currentPage <= 1) return;\r\n    changePage(currentPage - 1);\r\n  };\r\n\r\n  const goNext = () => {\r\n    if (currentPage >= totalPages) return;\r\n    changePage(currentPage + 1);\r\n  };\r\n\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    const parsedValue = parseInt(value, 10);\r\n\r\n    if (parsedValue < 1 || parsedValue > totalPages) {\r\n      return;\r\n    }\r\n\r\n    setValue(parsedValue);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (inputValue) {\r\n      changePage(inputValue);\r\n    } else {\r\n      setValue(currentPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <div>\r\n        <Button onClick={goBack}>\r\n          <Arrow className=\"pagination__arrow\" />\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"pagination__pages\">\r\n        <Input\r\n          type=\"number\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          onBlur={handleBlur}\r\n        />\r\n        <span>/</span>\r\n        <span>{totalPages}</span>\r\n      </div>\r\n\r\n      <div>\r\n        <Button onClick={goNext}>\r\n          <Arrow className=\"pagination__arrow pagination__arrow--right\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCharacters, selectCharacters } from 'store/slices/charactersSlice';\r\nimport { QueryVariables } from 'types/baseTypes';\r\n\r\nconst useCharacters = ({ page = 1, filter }: QueryVariables) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    status, data, error, info,\r\n  } = useSelector(selectCharacters);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCharacters({ page, filter }));\r\n  }, [page, filter]);\r\n\r\n  return {\r\n    status, data, error, info,\r\n  };\r\n};\r\n\r\nexport default useCharacters;\r\n","import { Link } from 'react-router-dom';\r\nimport { ChararterListItem } from 'types/characterTypes';\r\n\r\nimport './CharacterItem.scss';\r\n\r\ntype Props = ChararterListItem;\r\n\r\nconst CharacterItem = ({\r\n  id, image, name, species,\r\n}: Props) => (\r\n  <Link className=\"character\" to={`/ricky-and-morty/detail/${id}`} key={id}>\r\n    <img src={image} alt={name} loading=\"lazy\" />\r\n    <div className=\"character__label\">\r\n      <span className=\"character__name\">{name}</span>\r\n      <span className=\"character__species\">{species}</span>\r\n    </div>\r\n  </Link>\r\n);\r\n\r\nexport default CharacterItem;\r\n","import './NoResults.scss';\r\n\r\ntype Props = {\r\n  message?: string\r\n};\r\n\r\nconst NoResults = ({ message = 'No results' }:Props) => (\r\n  <div className=\"no-results\">\r\n    {message}\r\n  </div>\r\n);\r\n\r\nexport default NoResults;\r\n","import React from 'react';\r\nimport { ChararterListItem } from 'types/characterTypes';\r\nimport CharacterItem from '../Item/CharacterItem';\r\nimport NoResults from '../NoResults/NoResults';\r\n\r\ninterface Props {\r\n  characters: Array<ChararterListItem> | null;\r\n}\r\n\r\nconst CharactersList = ({ characters }: Props) => (\r\n  <>\r\n    {characters?.length ? (\r\n      characters.map((character) => (\r\n        <CharacterItem key={character.id} {...character} />\r\n      ))\r\n    ) : (\r\n      <NoResults />\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default CharactersList;\r\n","import './ListPlaceholder.scss';\r\n\r\nconst ListPlaceholder = () => {\r\n  const items = Array.from({ length: 20 });\r\n\r\n  return (\r\n    <>\r\n      {items.map((_) => (\r\n        <div className=\"placeholderItem\" />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListPlaceholder;\r\n","import { useMemo, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport SearchInput from 'components/SearchInput/SearchInput';\r\nimport Pagination from 'components/Pagination/Pagination';\r\n\r\nimport useCharacters from 'hooks/useCharacters';\r\nimport { RequestStatus } from 'types/baseTypes';\r\n\r\nimport CharactersList from './List/CharactersList';\r\nimport ListPlaceholder from './Placeholder/ListPlaceholder';\r\n\r\nimport './Characters.scss';\r\n\r\nconst Characters = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchQuery, setQuery] = useState('');\r\n\r\n  const filter = useMemo(() => ({ name: searchQuery }), [searchQuery]);\r\n  const { status, data, info } = useCharacters({ filter, page: currentPage });\r\n\r\n  const isLoading = [RequestStatus.idle, RequestStatus.pending].includes(status);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>R&M | Characters</title>\r\n      </Helmet>\r\n      <div className=\"characters\">\r\n        <div className=\"characters__topbar\">\r\n          <SearchInput className=\"characters__search\" placeholder=\"Search...\" onSubmit={setQuery} />\r\n          <Pagination totalPages={info?.pages} currentPage={currentPage} changePage={setCurrentPage} />\r\n        </div>\r\n        <div className=\"characters__grid\">\r\n          {isLoading ? (\r\n            <ListPlaceholder />\r\n          ) : (\r\n            <CharactersList characters={data} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","export default {\r\n  characters: '/',\r\n  characterDetail: '/ricky-and-morty/detail/:id',\r\n  errorPage: '/error',\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchDetail, selectDetail } from 'store/slices/detailSlice';\r\n\r\nconst useCharacterDetails = (id: string) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    status, data, error,\r\n  } = useSelector(selectDetail);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDetail(id));\r\n  }, [id]);\r\n\r\n  return {\r\n    status,\r\n    data,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useCharacterDetails;\r\n","export type Chararter = {\r\n  id: string;\r\n  image: string;\r\n  name: string;\r\n  species: string;\r\n  gender: string;\r\n  status: string;\r\n  location: {\r\n    name: string;\r\n  };\r\n  episode: Array<{\r\n    episode: string;\r\n    name: string;\r\n  }>;\r\n};\r\n\r\nexport type ChararterListItem = Pick<Chararter, 'id' | 'image' | 'name' | 'species'>;\r\n\r\nexport const ChararterLabels = {\r\n  image: 'image',\r\n  name: 'name',\r\n  species: 'species',\r\n  gender: 'gender',\r\n  status: 'status',\r\n  location: {\r\n    name: 'location name',\r\n  },\r\n  episode: {\r\n    episode: 'episode',\r\n    name: 'name',\r\n  },\r\n};\r\n","import { Chararter, ChararterLabels } from 'types/characterTypes';\r\n\r\nimport './DetailEpisodes.scss';\r\n\r\ntype Props = Pick<Chararter, 'episode'>;\r\n\r\nconst DetailEpisodes = ({ episode: episodes }: Props) => (\r\n  <ul className=\"episodes\">\r\n    <div className=\"episodes__label\">{ChararterLabels.episode.episode}</div>\r\n    {episodes.map((episode) => (\r\n      <li className=\"episode\">\r\n        <span className=\"episode__name\">{episode.name}</span>\r\n        <span className=\"episode__number\">{episode.episode}</span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default DetailEpisodes;\r\n","import './DetailPanel.scss';\r\n\r\ntype Props = {\r\n  label: string,\r\n  value: string\r\n};\r\n\r\nconst DetailPanel = ({ label, value }: Props) => (\r\n  <div className=\"detail-panel\">\r\n    <span className=\"detail-panel__label\">{label}</span>\r\n    <span className=\"detail-panel__value\">{value}</span>\r\n  </div>\r\n);\r\n\r\nexport default DetailPanel;\r\n","import { useHistory, useParams } from 'react-router';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport Button from 'components/common/Buttons/Button';\r\nimport Routes from 'components/AppRouter/Routes';\r\n\r\nimport { ReactComponent as Arrow } from 'assets/icons/arrow.svg';\r\nimport useCharacterDetails from 'hooks/useCharacterDetails';\r\nimport { ChararterLabels } from 'types/characterTypes';\r\n\r\nimport DetailEpisodes from './Episodes/DetailEpisodes';\r\nimport DetailPanel from './Panel/DetailPanel';\r\n\r\nimport './DetailView.scss';\r\n\r\nconst DetailView = () => {\r\n  const { push } = useHistory();\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const { data: character } = useCharacterDetails(id);\r\n\r\n  if (!character) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          {`R&M | ${character.name}`}\r\n        </title>\r\n      </Helmet>\r\n      <div className=\"detail-view\">\r\n        <div className=\"detail-view__topbar\">\r\n          <Button type=\"button\" onClick={() => push(Routes.characters)}>\r\n            <Arrow className=\"detail-view__arrow\" />\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"detail-view__description\">\r\n          <div className=\"detail-view__image\">\r\n            <img src={character.image} alt=\"\" />\r\n          </div>\r\n\r\n          <DetailPanel label={ChararterLabels.name} value={character.name} />\r\n          <DetailPanel label={ChararterLabels.gender} value={character.gender} />\r\n          <DetailPanel label={ChararterLabels.species} value={character.species} />\r\n          <DetailPanel label={ChararterLabels.status} value={character.status} />\r\n          <DetailPanel label={ChararterLabels.location.name} value={character.location.name} />\r\n        </div>\r\n        <div className=\"detail-view__episodes\">\r\n          <DetailEpisodes episode={character.episode} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailView;\r\n","import Routes from 'components/AppRouter/Routes';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { selectErrors } from 'store/slices/errorsSlice';\r\n\r\nimport './ErrorPage.scss';\r\n\r\nconst ErrorPage = () => {\r\n  const { messages } = useSelector(selectErrors);\r\n  const { push } = useHistory();\r\n\r\n  const gotoHome = () => {\r\n    push(Routes.characters);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!messages.length) {\r\n      gotoHome();\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"error-page\">\r\n      <strong className=\"error-page__header\">Ups! Something went wrong :(</strong>\r\n\r\n      <div className=\"error-page__details\">\r\n        Details:\r\n        <ul>\r\n          {messages.map((message) => (\r\n            <li>\r\n              {message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" onClick={gotoHome}>\r\n          Go to home page\r\n        </button>\r\n        <a href=\"mailto:mkokosinski91@gmail.com\">\r\n          Contact us\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import Routes from 'components/AppRouter/Routes';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { selectErrors } from 'store/slices/errorsSlice';\r\n\r\nconst useErrorBoundary = () => {\r\n  const { push } = useHistory();\r\n  const errors = useSelector(selectErrors);\r\n\r\n  useEffect(() => {\r\n    if (errors.isDataError) {\r\n      push(Routes.errorPage);\r\n    }\r\n  }, [errors]);\r\n};\r\n\r\nexport default useErrorBoundary;\r\n","import Characters from 'components/Characters/Characters';\nimport DetailView from 'components/DetailView/DetailView';\nimport ErrorPage from 'components/Errors/ErrorPage';\nimport useErrorBoundary from 'hooks/useErrorBoundary';\nimport { Route, Switch } from 'react-router';\nimport Routes from './Routes';\n\nconst Root = () => {\n  useErrorBoundary();\n  return (\n    <Switch>\n      <Route path={Routes.characterDetail}>\n        <DetailView />\n      </Route>\n      <Route path={Routes.errorPage}>\n        <ErrorPage />\n      </Route>\n\n      <Route path={Routes.characters}>\n        <Characters />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from 'store/store';\nimport AppRouter from './components/AppRouter/AppRouter';\n\nimport './main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppRouter />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}